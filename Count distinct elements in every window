class Solution {
    ArrayList<Integer> countDistinct(int arr[], int k) {
        ArrayList<Integer> ans = new ArrayList<>();
        Map<Integer, Integer> freqMap = new HashMap<>();
        
        // Initialize the first window
        for (int i = 0; i < k; i++) {
            freqMap.put(arr[i], freqMap.getOrDefault(arr[i], 0) + 1);
        }
        ans.add(freqMap.size());

        // Sliding window
        for (int i = k; i < arr.length; i++) {
            // Remove the element going out of the window
            int outElement = arr[i - k];
            if (freqMap.get(outElement) == 1) {
                freqMap.remove(outElement);
            } else {
                freqMap.put(outElement, freqMap.get(outElement) - 1);
            }

            // Add the new element
            freqMap.put(arr[i], freqMap.getOrDefault(arr[i], 0) + 1);

            // Store the distinct count
            ans.add(freqMap.size());
        }
        return ans;
    }
}
