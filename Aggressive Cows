//You are given an array with unique elements of stalls[], which denote the position of a stall. You are also given an integer k which denotes the number of aggressive cows. Your task is to assign stalls to k cows such that the minimum distance between any two of them is the maximum possible.




class Solution {
    public static boolean canweplace(int[] stalls,int dist,int cows){
        int n =stalls.length;
        int last=stalls[0];
        int cntcows =1;
        for(int i=1;i<n;i++){
            if(stalls[i]-last>=dist){
                cntcows++;
                last=stalls[i];
            }
            if(cntcows>=cows) return true;
        }
        return false;
    } 
    public static int aggressiveCows(int[] stalls, int k) {
        // code here
        Arrays.sort(stalls);
        int n =stalls.length;
        int low = 1;
        int high = stalls[n-1]-stalls[0];
        while(low<=high){
            int mid = low +(high-low)/2;
            if(canweplace(stalls,mid,k)==true){
                low=mid+1;
            }
            else{
                high=mid-1;
            }
        }
        return high;
        
    }
}
